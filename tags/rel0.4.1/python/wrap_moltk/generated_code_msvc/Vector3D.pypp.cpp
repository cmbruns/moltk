// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_moltk.hpp"
#include "vector3d.pypp.hpp"

namespace bp = boost::python;

void register_Vector3D_class(){

    { //::moltk::Vector3D_< double >
        typedef bp::class_< moltk::Vector3D_< double > > Vector3D_exposer_t;
        Vector3D_exposer_t Vector3D_exposer = Vector3D_exposer_t( "Vector3D", "\n Vector3D_<> is an arbitrary point or vector in 3-space.\n\n Vector3D_<> can contain Quantities with Units.\n", bp::init< >() );
        bp::scope Vector3D_scope( Vector3D_exposer );
        Vector3D_exposer.def( bp::init< double const &, double const &, double const & >(( bp::arg("x"), bp::arg("y"), bp::arg("z") )) );
        Vector3D_exposer.def( bp::init< moltk::BaseVector3D< double > const & >(( bp::arg("rhs") )) );
        bp::implicitly_convertible< moltk::BaseVector3D< double > const &, moltk::Vector3D_< double > >();
    }

}
