#summary Converting from SEQUOIA to MolTK
#labels Featured

= Introduction =

We intend for SEQUOIA users to have an easy time learning to use MolTK.  Interactive MolTK uses python, and requires the use of more punctuation (parentheses, quotation marks, dots, and underscores) than SEQUOIA does.  But I promise that the greater power of the python programming language is worth it.  Use the following guide to using MolTK.

= Conversions (MolTK 0.5) =

|| *Sequoia command* || *Corresponding moltk command(s)* || *Description* ||
|| {{{% sequoia}}} || {{{% python -i}}} <br> {{{>>> import moltk}}} || Start an alignment session ||
|| {{{SEQUOIA> read SEQ1 test1.fasta}}} || {{{>>> seq1 = moltk.load_fasta("test1.fasta")}}} || Load a sequence or alignment into seq1 ||
|| {{{SEQUOIA> read SEQ2 test2.fasta}}} || {{{>>> seq2 = moltk.load_fasta("test2.fasta")}}} || load a sequence or alignment into seq2 ||
|| {{{SEQUOIA> align}}} || {{{>>> align1 = moltk.align(seq1, seq2)}}} || Align two sequences/alignments.  ||
|| {{{SEQUOIA> print ALIGN}}} || {{{>>> print align1}}} || Display the alignment on screen ||
|| {{{SEQUOIA> set SEQ1 ALIGN}}} || {{{>>> seq1 = align1}}} || Copy the alignment to seq1 ||
|| {{{SEQUOIA> write ALIGN test.fasta}}} || {{{>>> align1.write_fasta("test.fasta")}}} || Save alignment to a file ||
|| {{{SEQUOIA> print ALIGN test.pretty}}} || {{{>>> align1.write_pretty("test.pretty")}}} || Save nicely formatted (but not computer parseable) version of alignment to a file || 
|| {{{SEQUOIA> print id ALIGN}}} || {{{>>> print align1.id_table()}}} || Display a table of pairwise sequence identities ||
|| {{{SEQUOIA> quit}}} || {{{>>> quit()}}} || End alignment session. ||
|| {{{SEQUOIA> @test.inp}}} || {{{>>> execfile("test.py")}}} || Run a script file you wrote ||
|| {{{% sequoia < test.inp}}} || {{{% python test.py}}} || Run a script you wrote directly from a command prompt ||
|| {{{SEQUOIA> COMMENT This is a comment}}} || {{{ >>> # This is a comment}}} || Statement is ignored ||
|| {{{SEQUOIA> help <command>}}} || {{{>>> help(<command>)}}} || Access documentation about a command ||
|| {{{SEQUOIA> system <command>}}} || {{{>>> import os}}}<br>{{{>>> os.system("<command>")}}} || Issue an operating system command ||
|| {{{SEQUOIA> consensus <sigma>}}} || ??? TODO || Create a consensus sequence with X's at non-conserved positions ||
|| {{{SEQUOIA> optimize}}} || ??? TODO || Improve an alignment by successively removing and realigning sequences ||
|| {{{SEQUOIA> print matrix}}} || ??? TODO || Display the current scoring matrix ||
|| {{{SEQUOIA> read matrix test.mat}}} || ??? TODO || Load a scoring matrix ||
|| {{{SEQUOIA> random 5}}} || ??? TODO || Calculate 5 alignment scores with SEQ2 randomly shuffled ||
|| {{{SEQUOIA> split 5}}} || ??? TODO || Remove sequence 5 from alignment and place it in seq1 ||
|| {{{SEQUOIA> weight}}} || ??? TODO || Apply sequence weights to alignment ||
|| {{{SEQUOIA> set epen 0.5}}} || {{{moltk.Aligner.get_shared_aligner().get_scorer()}}}<br>{{{.set_default_gap_extension_penalty(0.5*moltk.bit)}}} || Set gap extension penalty ||
|| {{{SEQUOIA> set gpen 10}}} || ??? TODO || Set gap opening penalty ||
|| {{{SEQUOIA> set pretty_length 50}}} || ??? TODO || set sequence width of formatted alignments ||
|| {{{SEQUOIA> set random_seed 1}}} || ??? TODO || change seed for RANDOM command ||
|| {{{SEQUOIA> set suboptimal 0.1}}} || ??? TODO || parameter for allowing suboptimal alignments ||

= Conversions not implemented in moltk 0.5 =

|| *Sequoia command* || *Corresponding moltk command(s)* || *Description* ||
|| {{{SEQUOIA> read STRUCT1 test1.pdb}}} || {{{<TODO in moltk 0.6>}}} || Load a structure into struct1 ||
|| {{{SEQUOIA> salign}}} || {{{<TODO in moltk 0.6>}}} || Create a structure based alignment ||
|| {{{SEQUOIA> overlay}}} || {{{<TODO in moltk 0.6>}}} || Superpose two structures ||
|| {{{SEQUOIA> equivalence}}} || {{{<TODO in moltk 0.6>}}} || Assign equivalent residues between two structures. ||
|| {{{SEQUOIA> set acutoff 45}}} || {{{<TODO in moltk 0.6>}}} || Max rotation difference for structure alignment in degrees ||
|| {{{SEQUOIA> set dcutoff 4.5}}} || {{{<TODO in moltk 0.6>}}} || Max distance difference for structure alignment in angstroms ||
|| {{{SEQUOIA> set runlength 4.5}}} || {{{<TODO in moltk 0.6>}}} || Min length required for a run of structurally equivalent residues ||
|| {{{SEQUOIA> set useangle 0}}} || {{{<TODO in moltk 0.6>}}} || Whether to use rotation similarity in structure alignment ||
|| {{{SEQUOIA> tabulate}}} || There is no tabulate command in MolTK || Populate pairwise residue scores before aligning.<br>Seldom used. ||
|| {{{SEQUOIA> stabulate}}} || There is no stabulate command in MolTK || Populate pairwise residue structure scores before aligning.<br>Seldom used. ||
|| {{{SEQUOIA> set echo 1}}} || I don't know how to do that in python || Output a copy of user's commands ||