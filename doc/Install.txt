#    MolTK is a Python and C++ toolkit for protein sequence/structure alignment and visualization
#    Copyright (C) 2011  Christopher M. Bruns
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#    
#    For questions contact: cmbruns@rotatingpenguin.com

How to install moltk:

A) The easy way - get a binary installer.

    Avoid the hassle of building from source by getting a binary distribution, if you can.

    Prerequisites:
    
    1) Python version 2.x
        http://www.python.org
        http://www.python.org/download/releases/2.7/


B) The hard way - build from source.

    Build from source if you cannot find a binary installer for your system.

    Additional prerequisites for building moltk from source:

    1) A C++ compiler.  
        On windows, use Visual Studio 9 (2008), if you intend to use the standard python 2.7 install.
            http://www.microsoft.com/express/downloads/
        On linux and Mac, use gcc
        On Mac you might need to install XCode developer tools to get gcc.

    2) Boost, including iostreams and python libraries.
        On windows get it from http://www.boostpro.com/download/ to get prebuilt binary libraries.
            Be sure to select the iostream and python libraries, and to select Visual Studio 9.  It might take
            several tries for the install to complete successfully.
        On Mac, I like to build fat binaries supporting both 32-bit and 64-bit architectures.  So I build boost like:
            ./bootstrap.sh --prefix=/usr/local
            sudo ./b2 address-model=32_64 architecture=x86 variant=release link=shared,static install
            <or to include PowerPC, which Python still does>
            sudo ./b2 address-model=32_64 architecture=combined variant=release link=shared,static install

    3) CMake
        http://www.cmake.org



C) Even harder - also regenerate python bindings.

    Only regenerate python bindings if you have changed the moltk API.

    Additional prerequisites for regenerating python bindings:
     * gccxml
        (you might need to install cvs first)
        cvs -d :pserver:anonymous@www.gccxml.org:/cvsroot/GCC_XML login
            (respond with password gccxml) 
        cvs -d :pserver:anonymous@www.gccxml.org:/cvsroot/GCC_XML co gccxml
        (install using cmake)
        (add location of gccxml.exe to your PATH)
        (on windows: run gccxml_vcconfig.bat from install area)
        On Windows, install to a directory without any space characters, i.e. NOT c:/Program Files/whatever

     * pygccxml
        svn checkout https://pygccxml.svn.sourceforge.net/svnroot/pygccxml/pygccxml_dev pygccxml
        cd pygccxml
        python setup.py build
        python setup.py install
        On windows, patch pygccxml/parser/source_reader.py method __create_command_line to NOT wrap command with double quotes.

     * pyplusplus
        svn checkout https://pygccxml.svn.sourceforge.net/svnroot/pygccxml/pyplusplus_dev pyplusplus
        cd pyplusplus
        python setup.py build
        python setup.py install
        
D) Generate API documentation
    * epydoc (for generating python API documentation)
        http://sourceforge.net/projects/epydoc/files/epydoc/

    * doxygen (C++ API documentation)
    
    * dot (graphs and figures in API documentation)
    