// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_moltk.h"
#include "NanometerUnit.pypp.hpp"

namespace bp = boost::python;

void register_NanometerUnit_class(){

    bp::class_< moltk::units::Unit< moltk::units::LengthDimension >, boost::noncopyable >( "NanometerUnit", "\n", bp::no_init )    
        .def( 
            "get_instance"
            , (::moltk::units::Unit< moltk::units::LengthDimension > const & (*)(  ))( &::moltk::units::Unit< moltk::units::LengthDimension >::get_instance )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "print_name"
            , (void (*)( ::std::basic_ostream< char, std::char_traits< char > > & ))( &::moltk::units::Unit< moltk::units::LengthDimension >::print_name )
            , ( bp::arg("os") ) )    
        .def( 
            "print_symbol"
            , (void (*)( ::std::basic_ostream< char, std::char_traits< char > > & ))( &::moltk::units::Unit< moltk::units::LengthDimension >::print_symbol )
            , ( bp::arg("os") ) )    
        .staticmethod( "get_instance" )    
        .staticmethod( "print_name" )    
        .staticmethod( "print_symbol" );

}
