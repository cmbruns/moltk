// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_moltk.hpp"
#include "unitvector3d.pypp.hpp"

namespace bp = boost::python;

struct UnitVector3D_wrapper : moltk::UnitVector3D, bp::wrapper< moltk::UnitVector3D > {

    UnitVector3D_wrapper( )
    : moltk::UnitVector3D( )
      , bp::wrapper< moltk::UnitVector3D >(){
        // null constructor
    
    }

    UnitVector3D_wrapper(::moltk::UnitVector3D const & other )
    : moltk::UnitVector3D( boost::ref(other) )
      , bp::wrapper< moltk::UnitVector3D >(){
        // copy constructor
    
    }

    UnitVector3D_wrapper(double const & x, double const & y, double const & z )
    : moltk::UnitVector3D( x, y, z )
      , bp::wrapper< moltk::UnitVector3D >(){
        // constructor
    
    }

};

void register_UnitVector3D_class(){

    bp::class_< UnitVector3D_wrapper, bp::bases< moltk::BaseVector3D< double > > >( "UnitVector3D", bp::init< >() )    
        .def( bp::init< moltk::UnitVector3D const & >(( bp::arg("other") )) )    
        .def( bp::init< double const &, double const &, double const & >(( bp::arg("x"), bp::arg("y"), bp::arg("z") )) )    
        .def( 
            "norm"
            , (::moltk::Real ( ::moltk::UnitVector3D::* )(  ) const)( &::moltk::UnitVector3D::norm ) )    
        .def( 
            "normSquared"
            , (::moltk::Real ( ::moltk::UnitVector3D::* )(  ) const)( &::moltk::UnitVector3D::normSquared ) );

}
