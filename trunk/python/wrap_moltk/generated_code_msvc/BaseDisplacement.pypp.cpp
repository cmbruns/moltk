// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_moltk.hpp"
#include "basedisplacement.pypp.hpp"

namespace bp = boost::python;

void register_BaseDisplacement_class(){

    bp::class_< moltk::BaseVector3D< moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > > >( "BaseDisplacement", bp::init< >() )    
        .def( bp::init< moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > const &, moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > const &, moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > const & >(( bp::arg("x"), bp::arg("y"), bp::arg("z") )) )    
        .def( 
            "norm"
            , (::moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > ( ::moltk::BaseVector3D<moltk::units::Quantity<moltk::units::Unit<moltk::units::LengthDimension>, double> >::* )(  ) const)( &::moltk::BaseVector3D< moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > >::norm ) )    
        .def( bp::self != bp::self )    
        .def( bp::self == bp::self )    
        .def( 
            "__getitem__"
            , (::moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > const & ( ::moltk::BaseVector3D<moltk::units::Quantity<moltk::units::Unit<moltk::units::LengthDimension>, double> >::* )( ::size_t ) const)( &::moltk::BaseVector3D< moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > >::operator[] )
            , ( bp::arg("i") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "size"
            , (::size_t ( ::moltk::BaseVector3D<moltk::units::Quantity<moltk::units::Unit<moltk::units::LengthDimension>, double> >::* )(  ) const)( &::moltk::BaseVector3D< moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > >::size ) )    
        .def( 
            "x"
            , (::moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > const & ( ::moltk::BaseVector3D<moltk::units::Quantity<moltk::units::Unit<moltk::units::LengthDimension>, double> >::* )(  ) const)( &::moltk::BaseVector3D< moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > >::x )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "y"
            , (::moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > const & ( ::moltk::BaseVector3D<moltk::units::Quantity<moltk::units::Unit<moltk::units::LengthDimension>, double> >::* )(  ) const)( &::moltk::BaseVector3D< moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > >::y )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "z"
            , (::moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > const & ( ::moltk::BaseVector3D<moltk::units::Quantity<moltk::units::Unit<moltk::units::LengthDimension>, double> >::* )(  ) const)( &::moltk::BaseVector3D< moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > >::z )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def_readonly( "SIZE", moltk::BaseVector3D< moltk::units::Quantity< moltk::units::Unit< moltk::units::LengthDimension >, double > >::SIZE );

}
