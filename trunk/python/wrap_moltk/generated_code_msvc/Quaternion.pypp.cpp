// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_moltk.hpp"
#include "quaternion.pypp.hpp"

namespace bp = boost::python;

void register_Quaternion_class(){

    bp::class_< moltk::Quaternion >( "Quaternion", "\n Quaternion is an elegant 4-element representation of a 3D rotation.\n", bp::init< >() )    
        .def( bp::init< moltk::units::Angle const &, moltk::UnitVector3D const & >(( bp::arg("angle"), bp::arg("unit_vector") )) )    
        .def( 
            "begin"
            , (::moltk::Real const * ( ::moltk::Quaternion::* )(  ) const)( &::moltk::Quaternion::begin )
                /* undefined call policies */ )    
        .def( 
            "begin"
            , (::moltk::Real * ( ::moltk::Quaternion::* )(  ) )( &::moltk::Quaternion::begin )
                /* undefined call policies */ )    
        .def( 
            "end"
            , (::moltk::Real const * ( ::moltk::Quaternion::* )(  ) const)( &::moltk::Quaternion::end )
                /* undefined call policies */ )    
        .def( 
            "end"
            , (::moltk::Real * ( ::moltk::Quaternion::* )(  ) )( &::moltk::Quaternion::end )
                /* undefined call policies */ )    
        .def( 
            "__getitem__"
            , (::moltk::Real & ( ::moltk::Quaternion::* )( ::size_t ) )( &::moltk::Quaternion::operator[] )
            , ( bp::arg("i") )
            , bp::return_value_policy< bp::copy_non_const_reference >() )    
        .def( 
            "__getitem__"
            , (::moltk::Real const & ( ::moltk::Quaternion::* )( ::size_t ) const)( &::moltk::Quaternion::operator[] )
            , ( bp::arg("i") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "set_from_angle_axis"
            , (::moltk::Quaternion & ( ::moltk::Quaternion::* )( ::moltk::units::Angle const &,::moltk::UnitVector3D const & ) )( &::moltk::Quaternion::set_from_angle_axis )
            , ( bp::arg("angle"), bp::arg("unit_vector") )
                /* undefined call policies */ )    
        .def( 
            "size"
            , (::size_t ( ::moltk::Quaternion::* )(  ) const)( &::moltk::Quaternion::size ) );

}
